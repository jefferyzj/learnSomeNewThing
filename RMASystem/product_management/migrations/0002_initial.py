# Generated by Django 5.1.3 on 2024-11-13 19:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('can_be_skipped', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer_number', models.IntegerField()),
                ('rack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layers', to='product_management.rack')),
            ],
        ),
        migrations.CreateModel(
            name='Space',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('space_number', models.IntegerField()),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spaces', to='product_management.layer')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_management.layer')),
                ('rack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_management.rack')),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_management.space')),
            ],
            options={
                'unique_together': {('rack', 'layer', 'space')},
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('possible_next_statuses', models.ManyToManyField(blank=True, related_name='previous_statuses', to='product_management.status')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SN', models.CharField(max_length=100, unique=True)),
                ('is_hot', models.BooleanField(default=False)),
                ('is_damaged', models.BooleanField(default=False)),
                ('damage_description', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product_management.category')),
                ('location', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='product_management.location')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product_management.status')),
            ],
        ),
        migrations.CreateModel(
            name='StatusTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_tasks', to='product_management.status')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_statuses', to='product_management.task')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('result', models.CharField(blank=True, choices=[('no_detection', 'No Detection'), ('test_done', 'Test Done')], max_length=50, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_management.product')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product_management.task')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='tasks',
            field=models.ManyToManyField(through='product_management.ProductTask', to='product_management.task'),
        ),
    ]
